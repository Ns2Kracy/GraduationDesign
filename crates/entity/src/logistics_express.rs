//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "logistics_express")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub express_id: i32,
    #[sea_orm(unique)]
    pub uuid: String,
    pub sender_name: String,
    pub sender_phone: String,
    pub sender_address: String,
    pub recipient_name: String,
    pub recipient_phone: String,
    pub recipient_address: String,
    pub express_company: String,
    pub express_number: String,
    pub express_status: String,
    pub express_at: Date,
    pub tracking_number: String,
    pub courier_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::logistics_courier::Entity",
        from = "Column::CourierId",
        to = "super::logistics_courier::Column::CourierId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    LogisticsCourier,
    #[sea_orm(has_many = "super::logistics_transport::Entity")]
    LogisticsTransport,
}

impl Related<super::logistics_courier::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LogisticsCourier.def()
    }
}

impl Related<super::logistics_transport::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LogisticsTransport.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
