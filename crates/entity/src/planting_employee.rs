//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "planting_employee")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub employee_id: i32,
    #[sea_orm(unique)]
    pub uuid: String,
    pub name: String,
    pub age: i32,
    pub sex: String,
    pub part: String,
    pub position: String,
    pub phone: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::planting_harvest::Entity")]
    PlantingHarvest,
    #[sea_orm(has_many = "super::planting_pesticide_use::Entity")]
    PlantingPesticideUse,
}

impl Related<super::planting_harvest::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlantingHarvest.def()
    }
}

impl Related<super::planting_pesticide_use::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlantingPesticideUse.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
