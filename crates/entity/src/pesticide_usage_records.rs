//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "pesticide_usage_records")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub pesticide_usage_id: i32,
    pub farm_id: i32,
    pub pesticide_name: String,
    pub pesticide_usage_date: Date,
    #[sea_orm(column_type = "Float")]
    pub pesticide_usage_amount: f32,
    #[sea_orm(column_type = "Text")]
    pub pesticide_usage_purpose: String,
    #[sea_orm(column_type = "Text")]
    pub remark: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::farms::Entity",
        from = "Column::FarmId",
        to = "super::farms::Column::FarmId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Farms,
}

impl Related<super::farms::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Farms.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
